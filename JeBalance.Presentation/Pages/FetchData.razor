@page "/fetchdata"
@using System.Text.Json;

<PageTitle>Weather forecast</PageTitle>
@inject IJSRuntime JSRuntime

@using JeBalance.Presentation.Data

<h1>Suivi de dénonciation</h1>

<div>
    <label for="denonciationId">ID de la dénonciation:</label>
    <input type="text" id="denonciationId" @bind="denonciationId" />
    <button @onclick="RechercherDenonciation">Rechercher</button>
</div>

@if (denonciation != null)
{
    if(denonciation.Reponse == null)
    {
        <h3>Vous n'avez pas encoire de réponse à vore dénonciation. Veuillez patienter encore un peu svp.</h3>
    }
    else
    {
        <h3>Réponse</h3>
        <p>Date: @denonciation.Reponse.Date</p>
        <p>Type de rétribution: @denonciation.Reponse.Type</p>
        <p>Retribution: @denonciation.Reponse.Retribution</p>
    }



    <h3>Date de création de la dénonciation</h3>
    <p>Date: @denonciation.date</p>
    <h3>Informateur</h3>
    <p>Prénom: @denonciation.informateur.prenom</p>
    <p>Nom: @denonciation.informateur.nom</p>
    <p>Adresse: @denonciation.informateur.adresse.numeroVoie @denonciation.informateur.adresse.nomVoie, @denonciation.informateur.adresse.codePostal @denonciation.informateur.adresse.commune</p>

    <h3>suspect</h3>
    <p>Prénom: @denonciation.suspect.prenom</p>
    <p>Nom: @denonciation.suspect.nom</p>
    <p>Adresse: @denonciation.suspect.adresse.numeroVoie @denonciation.suspect.adresse.nomVoie, @denonciation.suspect.adresse.codePostal @denonciation.suspect.adresse.commune</p>

    <p>Pays d'évasion: @denonciation.paysEvasion</p>
    <p>Délit: @denonciation.delit</p>
}
else
{
    <p>Données de dénonciation non disponibles.</p>
}

@code {
    private string denonciationId;
    private DenonciationItem denonciation;

    private async Task RechercherDenonciation()
    {
        // Log the denonciationId before making the request
        await LogMessage($"Recherche de la dénonciation avec l'ID : {denonciationId}");

        // Faire une requête GET à votre API pour récupérer les détails de la dénonciation
        // Utilisez HttpClient ou tout autre mécanisme pour effectuer la requête
        // Assurez-vous d'injecter HttpClient dans la classe si vous utilisez Blazor Server

        // Exemple avec HttpClient:
        var httpClient = new HttpClient();
        var response = await httpClient.GetAsync($"https://localhost:7180/api/denonciations/{denonciationId}");

        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            denonciation = JsonSerializer.Deserialize<DenonciationItem>(content);
            await LogMessage($"MDRR recherche de la dénonciation avec l'ID : {denonciation}");

        }
        else
        {
            // Gérer les erreurs de requête, par exemple:
            // Afficher un message d'erreur à l'utilisateur
            // Réinitialiser la variable denonciation à null ou à une nouvelle instance

            // Log the error message
            await LogMessage($"Erreur lors de la recherche de la dénonciation avec l'ID : {denonciationId}");
        }
    }

    private async Task LogMessage(string message)
    {
        await JSRuntime.InvokeVoidAsync("blazorLog", message);
    }
}